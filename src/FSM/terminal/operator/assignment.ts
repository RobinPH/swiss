import { ATOM, OR, WORD } from "../..";
import { Token } from "../tokenType";

//Assignment Operators (=, +=, -=, *=, /=, %=, //=, **=)
export const ASSIGNMENT_OPERATOR = ATOM("=")
  .name(Token.ASSIGNMENT_OPERATOR)
  .token();

export const ADDITION_ASSIGNMENT_OPERATOR = WORD("+=")
  .name(Token.ADDITION_ASSIGNMENT_OPERATOR)
  .token();

export const SUBTRACTION_ASSIGNMENT_OPERATOR = WORD("-=")
  .name(Token.SUBTRACTION_ASSIGNMENT_OPERATOR)
  .token();

export const MULTIPLICATION_ASSIGNMENT_OPERATOR = WORD("*=")
  .name(Token.MULTIPLICATION_ASSIGNMENT_OPERATOR)
  .token();

export const DIVISION_ASSIGNMENT_OPERATOR = WORD("/=")
  .name(Token.DIVISION_ASSIGNMENT_OPERATOR)
  .token();

export const MODULO_ASSIGNMENT_OPERATOR = WORD("%=")
  .name(Token.MODULO_ASSIGNMENT_OPERATOR)
  .token();

export const INTEGER_DIVISION_ASSIGNMENT_OPERATOR = WORD("//=")
  .name(Token.INTEGER_DIVISION_ASSIGNMENT_OPERATOR)
  .token();

export const EXPONENT_ASSIGNMENT_OPERATOR = WORD("**=")
  .name(Token.EXPONENT_ASSIGNMENT_OPERATOR)
  .token();

export const AND_BITWISE_ASSIGNMENT_OPERATOR = WORD("&=")
  .name(Token.AND_BITWISE_ASSIGNMENT_OPERATOR)
  .token();

export const OR_BITWISE_ASSIGNMENT_OPERATOR = WORD("|=")
  .name(Token.OR_BITWISE_ASSIGNMENT_OPERATOR)
  .token();

export const NOT_BITWISE_ASSIGNMENT_OPERATOR = WORD("~=")
  .name(Token.NOT_BITWISE_ASSIGNMENT_OPERATOR)
  .token();

export const XOR_BITWISE_ASSIGNMENT_OPERATOR = WORD("^=")
  .name(Token.XOR_BITWISE_ASSIGNMENT_OPERATOR)
  .token();

export const LEFT_SHIFT_BITWISE_ASSIGNMENT_OPERATOR = WORD("<<=")
  .name(Token.LEFT_SHIFT_BITWISE_ASSIGNMENT_OPERATOR)
  .token();

export const RIGHT_SHIFT_BITWISE_ASSIGNMENT_OPERATOR = WORD(">>=")
  .name(Token.RIGHT_SHIFT_BITWISE_ASSIGNMENT_OPERATOR)
  .token();

export const ASSIGNMENT_OPERATORS = OR(
  ADDITION_ASSIGNMENT_OPERATOR,
  SUBTRACTION_ASSIGNMENT_OPERATOR,
  EXPONENT_ASSIGNMENT_OPERATOR,
  MULTIPLICATION_ASSIGNMENT_OPERATOR,
  INTEGER_DIVISION_ASSIGNMENT_OPERATOR,
  DIVISION_ASSIGNMENT_OPERATOR,
  MODULO_ASSIGNMENT_OPERATOR,
  AND_BITWISE_ASSIGNMENT_OPERATOR,
  OR_BITWISE_ASSIGNMENT_OPERATOR,
  NOT_BITWISE_ASSIGNMENT_OPERATOR,
  XOR_BITWISE_ASSIGNMENT_OPERATOR,
  LEFT_SHIFT_BITWISE_ASSIGNMENT_OPERATOR,
  RIGHT_SHIFT_BITWISE_ASSIGNMENT_OPERATOR,
  ASSIGNMENT_OPERATOR
).name(Token.ASSIGNMENT_OPERATORS);
