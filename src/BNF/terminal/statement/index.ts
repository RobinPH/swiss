import { ATOM, CONCAT, OPTIONAL, OR, STAR, WORD } from "../..";
import { DECLARATOR } from "../declarator";
import { EXPRESSION } from "./expression";
import { IDENTIFIER } from "../identifier";
import {
  ASSIGNMENT_OPERATOR,
  ASSIGNMENT_OPERATORS,
} from "../operator/assignment";
import { SEMICOLON } from "../specialCharacter";
import { VALUE } from "../value";
import { NON_EMPTY_WHITESPACE, WHITESPACE } from "../whitespace";
import { DATATYPE_SPECIFIER } from "../keyword";

let _STATEMENTS = OR().name("STATEMENTS");

const LIST_OF_STATEMENTS = STAR(CONCAT(WHITESPACE, _STATEMENTS, WHITESPACE));

export const CODE_BLOCK = CONCAT(
  ATOM("{").name("OPENING_CURLY"),
  LIST_OF_STATEMENTS,
  ATOM("}").name("CLOSING_CURLY")
).name("CODE_BLOCK");

export const DECLARATION_STATEMENT = CONCAT(
  DECLARATOR,
  NON_EMPTY_WHITESPACE,
  OPTIONAL(CONCAT(DATATYPE_SPECIFIER, NON_EMPTY_WHITESPACE)),
  IDENTIFIER,
  WHITESPACE,
  ASSIGNMENT_OPERATOR,
  WHITESPACE,
  EXPRESSION
).name("DECLARATION_STATEMENT");

export const ASSIGNMENT_STATEMENT = CONCAT(
  IDENTIFIER,
  WHITESPACE,
  ASSIGNMENT_OPERATORS,
  WHITESPACE,
  EXPRESSION
).name("ASSIGNMENT_STATEMENT");

export const IF_STATEMENT = CONCAT(
  WORD("if").name("IF"),
  WHITESPACE,
  ATOM("("),
  WHITESPACE,
  EXPRESSION,
  WHITESPACE,
  ATOM(")"),
  WHITESPACE,
  CODE_BLOCK
);

const TRUE_STATEMENTS = OR(
  DECLARATION_STATEMENT,
  ASSIGNMENT_STATEMENT,
  EXPRESSION
).name("STATEMENTS");

export const FOR_STATEMENT = CONCAT(
  WORD("for").name("FOR"),
  WHITESPACE,
  ATOM("("),
  WHITESPACE,
  TRUE_STATEMENTS,
  WHITESPACE,
  SEMICOLON,
  WHITESPACE,
  TRUE_STATEMENTS,
  WHITESPACE,
  SEMICOLON,
  WHITESPACE,
  TRUE_STATEMENTS,
  WHITESPACE,
  ATOM(")"),
  WHITESPACE,
  CODE_BLOCK
);

export const FUNCTION_STATEMENT = CONCAT(
  WORD("function").name("FUNCTION"),
  NON_EMPTY_WHITESPACE,
  IDENTIFIER,
  WHITESPACE,
  ATOM("("),
  WHITESPACE,
  STAR(CONCAT(VALUE, WHITESPACE, ATOM(","), WHITESPACE)),
  OPTIONAL(IDENTIFIER),
  WHITESPACE,
  ATOM(")"),
  WHITESPACE,
  CODE_BLOCK
);

// @ts-ignore
_STATEMENTS = _STATEMENTS.OR(
  CONCAT(TRUE_STATEMENTS, SEMICOLON).name("STATEMENTS"),
  IF_STATEMENT,
  FOR_STATEMENT,
  FUNCTION_STATEMENT,
  CODE_BLOCK
);

export const SWISS = LIST_OF_STATEMENTS;
